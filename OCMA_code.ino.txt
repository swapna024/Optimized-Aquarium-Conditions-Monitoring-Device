#include <LiquidCrystal.h>

// Declare constants
const int LM35 = A0;
const int motor = A2;
const int heater = 9;
const int LedRed = 12;
const int LedGreen = 11;
const int LedBlue = 10;
const int trigpin = 2;
const int fan = 13;
const int echopin = 8;

// Initialize the LCD with the numbers of the interface pins
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.print("Smart Fish Tank");
  delay(1000);

  pinMode(fan, OUTPUT);
  pinMode(motor, OUTPUT);
  pinMode(heater, OUTPUT);
  pinMode(LedRed, OUTPUT);
  pinMode(LedGreen, OUTPUT);
  pinMode(LedBlue, OUTPUT);
  pinMode(trigpin, OUTPUT);
  pinMode(echopin, INPUT);

  delay(2000);
  lcd.clear();
  lcd.print("Temp= ");
  lcd.setCursor(0, 1);
  lcd.print("Fan= ");
  lcd.setCursor(8, 1);
  lcd.print("&Hot= ");
}

void loop() {
  // Temperature Sensor
  int value = analogRead(LM35);
  float Temperature = value * 500.0 / 1023.0;
  lcd.setCursor(6, 0);
  lcd.print(Temperature);

  // Temperature Regulation
  if (Temperature > 28) {
    digitalWrite(fan, HIGH);
    digitalWrite(heater, LOW);
    digitalWrite(LedRed, HIGH);
    digitalWrite(LedGreen, LOW);
    digitalWrite(LedBlue, LOW);
    lcd.setCursor(5, 1);
    lcd.print("ON ");
    lcd.setCursor(13, 1);
    lcd.print("OFF");
  } else if (Temperature < 15) {
    digitalWrite(fan, LOW);
    digitalWrite(heater, HIGH);
    digitalWrite(LedRed, LOW);
    digitalWrite(LedGreen, LOW);
    digitalWrite(LedBlue, HIGH);
    lcd.setCursor(5, 1);
    lcd.print("OFF");
    lcd.setCursor(13, 1);
    lcd.print("ON ");
  } else {
    digitalWrite(fan, LOW);
    digitalWrite(heater, LOW);
    digitalWrite(LedRed, LOW);
    digitalWrite(LedGreen, HIGH);
    digitalWrite(LedBlue, LOW);
    lcd.setCursor(5, 1);
    lcd.print("OFF");
    lcd.setCursor(13, 1);
    lcd.print("OFF");
  }

  delay(1000);

  // Fish Proximity Detection (Ultrasonic)
  long dur, tocm;
  digitalWrite(trigpin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin, LOW);
  dur = pulseIn(echopin, HIGH);
  tocm = microsecondsToCentimeters(dur);

  if (tocm <= 20) {
    digitalWrite(motor, LOW); // Stop motor if fish is near
  } else {
    digitalWrite(motor, HIGH); // Start motor
  }
}

// Helper function for ultrasonic conversion
long microsecondsToCentimeters(long microseconds) {
  return microseconds / 29 / 2;
}